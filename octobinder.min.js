angular.module("OctoBinder",[]).factory("obBinder",["$parse","$q","obBinderTypes","obModelWriter","obObserver",function(e,t,n,r,i){function s(e,t,n,r){r=r||{};if(!n)throw new Error("protocol is required");if(!e)throw new Error("scope is required");if(!t)throw new Error("model is required");if(r.key&&typeof r.key!=="string"){throw new Error("key must be a string")}this.protocol=n;this.scope=e;this.model=t;this.query=r.query;this.type=r.type;this.key=r.key;this.ignoreNModelChanges=0;this.ignoreNProtocolChanges=0;this.bindModel(this.type,e,t);this.protocol.subscribe(this)}s.prototype.bindModel=function(e,t,r){switch(e){case n.COLLECTION:case n.OBJECT:this.observer=i.observeCollection(this,t[r],this.onModelChange);break}};s.prototype.unbind=function(){this.observer.close()};s.prototype.onModelChange=function(e){var n=0,r={changes:e},i=t.defer();for(var s=0;s<e.length;s++){if(e.name&&1){n++}else{n+=e[s].addedCount+(e[s].removed&&e[s].removed.length)||0}}if(!r.changes.length){i.resolve()}else{if(this.ignoreNModelChanges){this.ignoreNModelChanges-=n;i.resolve()}else if(n){this.protocol.processChanges(this,r).then(function(){i.resolve()})}}return i.promise};s.prototype.onProtocolChange=function(e){var n={changes:e},i=t.defer();if(!e.length){i.resolve()}else{if(this.ignoreNProtocolChanges){var s=[];for(var o=0;o<e.length;o++){if(e[o].force){s.push(e[o])}this.ignoreNProtocolChanges--}if(s.length){n.changes=s}else{i.resolve()}}r.processChanges(this,n).then(function(){i.resolve()})}return i.promise};s.prototype.val=function(){var t=e(this.model);return t(this.scope)};return function(){var e=Object.create(s.prototype);s.apply(e,arguments);return e}}]);angular.module("OctoBinder").factory("obBinderTypes",[function(){return{COLLECTION:"collection",OBJECT:"object",BOOLEAN:"boolean",STRING:"string",NUMBER:"number",BINARY:"binary",BINARY_STREAM:"binaryStream"}}]);(function(){var e=function(){};e.prototype.addChange=function(e){if(!e.type)throw new Error("Change must contain a type");this.changes.push(e)};e.prototype.updateObject=function(e){this.object=e;angular.forEach(this.changes,function(t,n,r){r[n].object=e})};angular.module("OctoBinder").factory("obDelta",function(){return function(t){var n=Object.create(e.prototype);e.call(n);n.changes=[];if(t)n.addChange(t);return n}})})();angular.module("OctoBinder").service("obModelWriter",["$parse","$q","obBinderTypes","obSyncEvents",function(e,t,n,r){var i=this;this.applyArrayChange=function(t,n){var r=e(t.model)(t.scope);if(n.added){var i=n.added.shift();r.splice(n.index,n.removed?n.removed.length:0,i);while(next=n.added.shift()){n.index++;r.splice(n.index,0,next)}}else{r.splice(n.index,n.removed?n.removed.length:0)}t.ignoreNModelChanges+=(n.removed&&n.removed.length||0)+n.addedCount;e(t.model).assign(t.scope,r);if(!t.scope.$$phase)t.scope.$apply()};this.applyObjectChange=function(e,t){if(e.key){function n(t,n){var r;var i=e.scope[e.model];angular.forEach(i,function(e,i){if(r)return;if(e[t]===n){r=e}else if(typeof e[t]==="undefined"){r=e}});return r}var r=n(e.key,t.object[e.key]);if(!r)throw new Error("Could not find object with key"+t.object[e.key]);switch(t.type){case"update":if(r[t.name]!==t.object[t.name]){e.ignoreNModelChanges++}r[t.name]=t.object[t.name];break;case"delete":e.ignoreNModelChanges++;delete r[t.name];break;case"new":if(r[t.name]!==t.object[t.name]){e.ignoreNModelChanges++}r[t.name]=t.object[t.name];break}if(!e.scope.$$phase){e.scope.$apply()}}};this.processChanges=function(e,r){var s=t.defer(),o=[];for(var u=0;u<r.changes.length;u++){switch(e.type){case n.COLLECTION:if(typeof r.changes[u].index==="number"){o.push(function(){i.applyArrayChange(e,r.changes[u])}(u))}else if(typeof change.name==="string"){this.applyObjectChange(e,r.changes[u]);o.push(function(){i.applyObjectChange(e,r.changes[u])}(u))}break}}t.all(o).then(function(){s.resolve()});return s.promise}}]);angular.module("OctoBinder").factory("obArrayChange",function(){return function(e,t,n){return{addedCount:e,removed:t,index:n}}}).factory("obOldObject",function(){return function(e){var t=angular.copy(e.object);t[e.name]=e.oldValue;return t}}).service("obObserver",["obArrayChange","obOldObject","$q",function(e,t,n){this.observeObjectInCollection=function(n,r,i,s){function o(i,o,u,a){function c(n){var i=t(n),s=r.indexOf(n.object);l.push(e(1,[i],s))}var f=[{added:i,removed:o,changed:u,index:a(n.key)}];var l=[];if(!n.key){angular.forEach(f,c);s.call(n,l)}else{s.call(n,f)}}this.observers[i]=new ObjectObserver(i,o)};this.observers={};this.observeCollection=function(e,t,n){function s(i){r.observeObjectInCollection(e,t,i,n)}function o(t){angular.forEach(t,u);n.call(e,t)}function u(e){var n=e.index;var i=e.addedCount+e.index;while(n<i){s(t[n]);n++}if(e.removed.length){angular.forEach(e.removed,function(t){r.observers[t].close()})}}var r=this,i;angular.forEach(t,s);i=new ArrayObserver(t,o);return i}}]);angular.module("OctoBinder").value("obSyncEvents",{NEW:"new",UPDATED:"update",DELETED:"deleted",RECONFIGURED:"reconfigured",READ:"read",MOVE:"move",NONE:"none",INIT:"init",UNKNOWN:"unknown"})
